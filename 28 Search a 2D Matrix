public class Solution {
    /**
     * @param matrix, a list of lists of integers
     * @param target, an integer
     * @return a boolean, indicate whether matrix contains target
     */
    public boolean searchMatrix(int[][] matrix, int target) {
        // write your code here
        if(matrix == null || matrix.length == 0 || matrix[0].length == 0 || matrix[0][0] > target) return false;
        
        int row = whichRow(matrix, target);
        
        int start = 0; int end = matrix[0].length-1;
        
        while(start+1 < end) {
            int mid = (start+end)/2;
            
            if(matrix[row][mid] < target) {
                start = mid;
            } else if (matrix[row][mid] > target) {
                end = mid;
            } else {
                return true;
            }
        }
        
        if(matrix[row][start] == target || matrix[row][end] == target) return true;
        
        return false;
    }
    
    public int whichRow(int[][] matrix, int target) {
        int start = 0; int end = matrix.length-1;
        int mid = 0;
        while(start+1 < end) {
            mid = (start+end)/2;
            
            if(matrix[mid][0] > target) {
                end = mid;
            } else {
                start = mid;
            }
        }
        
        return matrix[end][0] > target ? start : end;
    }
}

