http://www.lintcode.com/en/problem/binary-tree-postorder-traversal/

/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: Postorder in ArrayList which contains node values.
     */
    public ArrayList<Integer> postorderTraversal(TreeNode root) {
        // write your code here
        ArrayList<Integer> result = new ArrayList<Integer>();
        if(root == null) return result;
        
        Stack<TreeNode> s = new Stack<TreeNode>();
        s.push(root);
        
        while(!s.isEmpty()) {
            TreeNode node = s.peek();
            if(node.left == null && node.right == null) {
                result.add(node.val);
                s.pop();
            }
            
            if(node.left != null) {
                s.push(node.left);
                node.left = null;
                continue;
            }
            
            if(node.right != null) {
                s.push(node.right);
                node.right = null;
                continue;
            }
        }
        
        return result;
    }
}
