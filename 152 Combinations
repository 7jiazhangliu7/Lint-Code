public class Solution {
    /**
     * @param n: Given the range of numbers
     * @param k: Given the numbers of combinations
     * @return: All the combinations of k numbers out of 1..n
     */
    public List<List<Integer>> combine(int n, int k) {
		// write your code here
		List<List<Integer>> result = new ArrayList<List<Integer>>();
		if(n < 1 || k < 0) return result;
		
		helper(result, new ArrayList<Integer>(), n,k,1);
		
		return result;
    }
    
    public void helper(List<List<Integer>> result, List<Integer> temp, int n, int k, int start) {
        if(temp.size() == k) {
            result.add(new ArrayList<Integer>(temp));
            return;
        }
        
        for(int i = start; i <= n; i++) {
            temp.add(i);
            helper(result,temp,n,k,i+1);
            temp.remove(temp.size()-1);
        }
    }
}
