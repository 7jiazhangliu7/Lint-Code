http://www.lintcode.com/en/problem/implement-queue-by-two-stacks/

public class Solution {
    private Stack<Integer> stack1;
    private Stack<Integer> stack2;

    public Solution() {
       // do initialization if necessary
       stack1 = new Stack<Integer>();
       stack2 = new Stack<Integer>();
    }
    
    public void push(int element) {
        // write your code here
        stack1.push(element);
    }

    public int pop() {
        // write your code here
        if(!stack1.isEmpty()) {
            while(!stack1.isEmpty()) {
                stack2.push(stack1.pop());
            }
            int result = stack2.pop();
            
            while(!stack2.isEmpty()) {
                stack1.push(stack2.pop());
            }
            
            return result;
        } else {
            return -1;
        }
    }

    public int top() {
        // write your code here
        if(!stack1.isEmpty()) {
            while(!stack1.isEmpty()) {
                stack2.push(stack1.pop());
            }
            int result = stack2.peek();
            
            while(!stack2.isEmpty()) {
                stack1.push(stack2.pop());
            }
            
            return result;
        } else {
            return -1;
        }
    }
}

