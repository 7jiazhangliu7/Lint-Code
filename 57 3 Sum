public class Solution {
    /**
     * @param numbers : Give an array numbers of n integer
     * @return : Find all unique triplets in the array which gives the sum of zero.
     */
    public ArrayList<ArrayList<Integer>> threeSum(int[] numbers) {
        // write your code here
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(numbers == null || numbers.length == 0) {
            return result;
        }
        Arrays.sort(numbers);
        for(int i = 0; i < numbers.length-2; i++) {
            if(i != 0 && numbers[i] == numbers[i-1]) {
                continue;
            }
            
            int left = i+1, right = numbers.length-1;
            int target = -1*numbers[i];
            while(left < right) {
                int sum = numbers[left] + numbers[right];
                if(sum > target) {
                    right--;
                }else if(sum < target) {
                    left++;
                }else {
                    ArrayList<Integer> list = new ArrayList<Integer>();
                    list.add(numbers[i]);
                    list.add(numbers[left]);
                    list.add(numbers[right]);
                    result.add(new ArrayList<Integer>(list));
                    left++;
                    right--;
                    
                    while(left < right && numbers[left] == numbers[left-1]) {
                        left++;
                    }
                    
                    while(left < right && numbers[right] == numbers[right+1]) {
                        right--;
                    }
                }
            }
        }
        return result;
    }
}
