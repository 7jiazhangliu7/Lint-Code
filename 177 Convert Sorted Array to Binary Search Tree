/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */ 
 
 //http://www.lintcode.com/en/problem/convert-sorted-array-to-binary-search-tree-with-minimal-height/
 
public class Solution {
    /**
     * @param A: an integer array
     * @return: a tree node
     */
    public TreeNode sortedArrayToBST(int[] A) {  
        // write your code here
        if(A == null || A.length == 0) return null;
        
        return helper(A, 0, A.length-1);
    }  
    
    public TreeNode helper(int[] A, int start, int end) {
        if(start > end) return null;
        
        int mid = (start+end)/2; //这个index要注意！！
        
        TreeNode root = new TreeNode(A[mid]);
        root.left = helper(A, start, mid-1);
        root.right = helper(A, mid+1, end);
        
        return root;
    }
}

