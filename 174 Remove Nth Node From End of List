//http://www.lintcode.com/en/problem/remove-nth-node-from-end-of-list/

/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param head: The first node of linked list.
     * @param n: An integer.
     * @return: The head of linked list.
     */
    ListNode removeNthFromEnd(ListNode head, int n) {
        // write your code here
        if(head == null || n < 0) return head;
        
        ListNode dummy = new ListNode(Integer.MIN_VALUE);
        
        dummy.next = head;
        ListNode pre = dummy;
        ListNode fast = head;

        int i = 0;
        while(i < n - 1) {
            fast = fast.next;
            i++;
        }
        
        while(fast.next != null) {
            fast = fast.next;
            head = head.next;
            pre = pre.next;
        }
        
        pre.next = head.next;
        
        return dummy.next;
    }
}

