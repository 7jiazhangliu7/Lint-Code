public class Solution {
    /**
     * @param n: An integer.
     * return : An array storing 1 to the largest number with n digits.
     */
    public List<Integer> numbersByRecursion(int n) {
        // write your code here\List<Integer
        List<Integer> result = new ArrayList<Integer>();
        
        if(n == 0) return result;
        
        ArrayList<Integer> temp = new ArrayList<Integer>();
        
        for(int i = 1; i < 10; i++) {
            temp.add(i);
            result.add(i);
        }
        
        helper(result, temp, 1, n);
        
        return result;
    }
    
    public void helper(List<Integer> result, ArrayList<Integer> temp, int level, int n) {
        if(level == n) return;
        ArrayList<Integer> newAList = new ArrayList<Integer>();
        for(Integer ii : temp) {
            for(int i = 0; i < 10; i++) {
                newAList.add(ii*10 + i);
                result.add(ii*10 + i);
            }
        }
        
        helper(result, newAList, level+1, n);
    }
}
