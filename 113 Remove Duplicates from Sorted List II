/**
 * Definition for ListNode
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param ListNode head is the head of the linked list
     * @return: ListNode head of the linked list
     */
    public static ListNode deleteDuplicates(ListNode head) {
        // write your code here
        if(head == null || head.next == null) return head;
        
        ListNode dummy = new ListNode(Integer.MIN_VALUE);
        ListNode curr = head;
        dummy.next = head;
        
        ListNode pre = dummy;
        
        while(curr != null) {
            int val = curr.val;
            if(curr.next != null && curr.next.val == val) {
                while(curr.next != null && curr.next.val == val) {
                    curr = curr.next;
                }
                //pre.next = curr.next;
                //pre = pre.next;
                curr = curr.next;
                if(curr == null) pre.next= curr;
            } else if(curr.next != null && curr.next.val != val){
                pre.next = curr;
                pre = pre.next;
                curr = curr.next;
            } else {
                if(curr == null) pre.next= curr;
                curr = curr.next;
            }
        }
        
        return dummy.next;
    }
}

