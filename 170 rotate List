/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
 
 记得记录前一个然后达到新的头之后断掉链表~~~~~~~~~~
 
public class Solution {
    /**
     * @param head: the List
     * @param k: rotate to the right k places
     * @return: the list after rotation
     */
    public ListNode rotateRight(ListNode head, int k) {
        // write your code here
        if(head == null || head.next == null) return head;
        
        ListNode newHead = head, temp = head;
        int length = 1;
        while(temp.next != null) {
            length++;
            temp = temp.next;
        }
        k = k % length;
        
        temp.next = head;
        ListNode pre = temp;
        temp = head;
        for(int i = 0; i < k; i++) {
            temp = temp.next;
        }
        
        while(temp != newHead) {
            temp = temp.next;
            head = head.next;
            pre = pre.next;
        }
        
        pre.next = null;
        
        return head;
    }
}
