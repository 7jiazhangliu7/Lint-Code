http://www.lintcode.com/en/problem/add-two-numbers/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;      
 *     }
 * }
 */
public class Solution {
    /**
     * @param l1: the first list
     * @param l2: the second list
     * @return: the sum list of l1 and l2 
     */
    public ListNode addLists(ListNode l1, ListNode l2) {
        // write your code here
        if(l1 == null || l2 == null) {
            return l1 == null ? l2 : l1;
        }
        
        ListNode result = new ListNode(Integer.MIN_VALUE);
        ListNode cur = result;
        int carry = 0;
        
        while(l1 != null && l2 != null) {
            int sum = carry + l1.val + l2.val;
            cur.next = new ListNode(sum % 10);
            carry = sum / 10;
            cur = cur.next;
            l1 = l1.next;
            l2 = l2.next;
        }
        
        if(l1 == null) {
            while(l2 != null) {
                int sum = carry + l2.val;
                cur.next = new ListNode(sum % 10);
                carry = sum / 10;
                cur = cur.next;
                l2 = l2.next;
            }
        }
        
        if(l2 == null) {
            while(l1 != null) {
                int sum = carry + l1.val;
                cur.next = new ListNode(sum % 10);
                carry = sum / 10;
                cur = cur.next;
                l1 = l1.next;
            }
        }
        
        if(carry == 1) {
            cur.next = new ListNode(1);
        }
        
        return result.next;
    }
}
